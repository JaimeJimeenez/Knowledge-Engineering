{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nexport class FileReaderComponent {\n  constructor() {\n    this.title = '';\n    this.isExamples = false;\n    this.contentEmitter = new EventEmitter();\n    this._content = [];\n  }\n  _getContent(content) {\n    if (this.isExamples) {\n      const text = content.split('\\n');\n      const textSplitted = text.map(example => example.split(','));\n      textSplitted.forEach((text, index) => {\n        text.forEach((element, index) => {\n          if (index === text.length - 1 && element.length === 3) text[index] = text[index].slice(0, element.length - 1);\n        });\n      });\n      return textSplitted;\n    }\n    return content.split(',');\n  }\n  onFileSelected(event) {\n    const selectedFile = event.target.files[0];\n    if (selectedFile) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const fileContent = reader.result;\n        this._content = this._getContent(fileContent);\n        this.contentEmitter.emit({\n          content: this._content,\n          isExamples: this.isExamples\n        });\n      };\n      reader.readAsText(selectedFile);\n    }\n  }\n  static #_ = this.ɵfac = function FileReaderComponent_Factory(t) {\n    return new (t || FileReaderComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FileReaderComponent,\n    selectors: [[\"id3-file-reader\"]],\n    inputs: {\n      title: \"title\",\n      isExamples: \"isExamples\"\n    },\n    outputs: {\n      contentEmitter: \"contentEmitter\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 5,\n    vars: 1,\n    consts: [[1, \"container\"], [1, \"mb-3\"], [\"for\", \"formFile\", 1, \"form-label\"], [\"type\", \"file\", \"id\", \"formFile\", 1, \"form-control\", 3, \"change\"]],\n    template: function FileReaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 3);\n        i0.ɵɵlistener(\"change\", function FileReaderComponent_Template_input_change_4_listener($event) {\n          return ctx.onFileSelected($event);\n        });\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.title);\n      }\n    },\n    dependencies: [CommonModule],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","CommonModule","FileReaderComponent","constructor","title","isExamples","contentEmitter","_content","_getContent","content","text","split","textSplitted","map","example","forEach","index","element","length","slice","onFileSelected","event","selectedFile","target","files","reader","FileReader","onload","fileContent","result","emit","readAsText","_","_2","selectors","inputs","outputs","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","FileReaderComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","FileReaderComponent_Template_input_change_4_listener","$event","ɵɵadvance","ɵɵtextInterpolate","styles"],"sources":["/Users/jimmyjimenez/Desktop/University/Ingeniería del Conocimiento/Knowledge-Engineering/ID3/ID3/src/app/components/file-reader/file-reader.component.ts","/Users/jimmyjimenez/Desktop/University/Ingeniería del Conocimiento/Knowledge-Engineering/ID3/ID3/src/app/components/file-reader/file-reader.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'id3-file-reader',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './file-reader.component.html',\n  styleUrls: ['./file-reader.component.scss']\n})\nexport class FileReaderComponent {\n  @Input() title : string = '';\n  @Input() isExamples : boolean = false;\n  @Output() contentEmitter = new EventEmitter<{ content : string[][] | string[], isExamples : boolean }>();\n\n  constructor() {}\n\n  private _content : string[][] | string[] = [];\n\n  private _getContent(content : string) : string[] | string[][] {\n    if (this.isExamples) {\n      const text = content.split('\\n');\n      const textSplitted = text.map(example => example.split(','));\n      textSplitted.forEach((text, index) => {\n        text.forEach((element, index) => {\n          if (index === text.length - 1 && element.length === 3)\n            text[index] = text[index].slice(0, element.length - 1)\n        });\n      });\n      return textSplitted;\n    }\n    return content.split(',');\n  }\n\n  onFileSelected(event : any) : void {\n    const selectedFile = event.target.files[0];\n    if (selectedFile) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const fileContent = reader.result as string;\n        this._content = this._getContent(fileContent);\n        this.contentEmitter.emit({ content : this._content, isExamples: this.isExamples });\n      };\n      reader.readAsText(selectedFile);\n    }\n\n  }\n}\n","<div class=\"container\">\n  <div class=\"mb-3\">\n    <label for=\"formFile\" class=\"form-label\" >{{ title }}</label>\n    <input type=\"file\" class=\"form-control\" id=\"formFile\" (change)=\"onFileSelected($event)\">\n  </div>\n</div>\n"],"mappings":"AAAA,SAAoBA,YAAY,QAAuB,eAAe;AACtE,SAASC,YAAY,QAAQ,iBAAiB;;AAS9C,OAAM,MAAOC,mBAAmB;EAK9BC,YAAA;IAJS,KAAAC,KAAK,GAAY,EAAE;IACnB,KAAAC,UAAU,GAAa,KAAK;IAC3B,KAAAC,cAAc,GAAG,IAAIN,YAAY,EAA6D;IAIhG,KAAAO,QAAQ,GAA2B,EAAE;EAF9B;EAIPC,WAAWA,CAACC,OAAgB;IAClC,IAAI,IAAI,CAACJ,UAAU,EAAE;MACnB,MAAMK,IAAI,GAAGD,OAAO,CAACE,KAAK,CAAC,IAAI,CAAC;MAChC,MAAMC,YAAY,GAAGF,IAAI,CAACG,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACH,KAAK,CAAC,GAAG,CAAC,CAAC;MAC5DC,YAAY,CAACG,OAAO,CAAC,CAACL,IAAI,EAAEM,KAAK,KAAI;QACnCN,IAAI,CAACK,OAAO,CAAC,CAACE,OAAO,EAAED,KAAK,KAAI;UAC9B,IAAIA,KAAK,KAAKN,IAAI,CAACQ,MAAM,GAAG,CAAC,IAAID,OAAO,CAACC,MAAM,KAAK,CAAC,EACnDR,IAAI,CAACM,KAAK,CAAC,GAAGN,IAAI,CAACM,KAAK,CAAC,CAACG,KAAK,CAAC,CAAC,EAAEF,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC;QAC1D,CAAC,CAAC;MACJ,CAAC,CAAC;MACF,OAAON,YAAY;;IAErB,OAAOH,OAAO,CAACE,KAAK,CAAC,GAAG,CAAC;EAC3B;EAEAS,cAAcA,CAACC,KAAW;IACxB,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC1C,IAAIF,YAAY,EAAE;MAChB,MAAMG,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,MAAM,GAAG,MAAK;QACnB,MAAMC,WAAW,GAAGH,MAAM,CAACI,MAAgB;QAC3C,IAAI,CAACtB,QAAQ,GAAG,IAAI,CAACC,WAAW,CAACoB,WAAW,CAAC;QAC7C,IAAI,CAACtB,cAAc,CAACwB,IAAI,CAAC;UAAErB,OAAO,EAAG,IAAI,CAACF,QAAQ;UAAEF,UAAU,EAAE,IAAI,CAACA;QAAU,CAAE,CAAC;MACpF,CAAC;MACDoB,MAAM,CAACM,UAAU,CAACT,YAAY,CAAC;;EAGnC;EAAC,QAAAU,CAAA,G;qBApCU9B,mBAAmB;EAAA;EAAA,QAAA+B,EAAA,G;UAAnB/B,mBAAmB;IAAAgC,SAAA;IAAAC,MAAA;MAAA/B,KAAA;MAAAC,UAAA;IAAA;IAAA+B,OAAA;MAAA9B,cAAA;IAAA;IAAA+B,UAAA;IAAAC,QAAA,GAAAC,EAAA,CAAAC,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVhCP,EAAA,CAAAS,cAAA,aAAuB;QAEuBT,EAAA,CAAAU,MAAA,GAAW;QAAAV,EAAA,CAAAW,YAAA,EAAQ;QAC7DX,EAAA,CAAAS,cAAA,eAAwF;QAAlCT,EAAA,CAAAY,UAAA,oBAAAC,qDAAAC,MAAA;UAAA,OAAUN,GAAA,CAAA3B,cAAA,CAAAiC,MAAA,CAAsB;QAAA,EAAC;QAAvFd,EAAA,CAAAW,YAAA,EAAwF;;;QAD9CX,EAAA,CAAAe,SAAA,GAAW;QAAXf,EAAA,CAAAgB,iBAAA,CAAAR,GAAA,CAAA3C,KAAA,CAAW;;;mBDI7CH,YAAY;IAAAuD,MAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}